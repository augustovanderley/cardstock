;; BLACKJACK in the GDL
(game
    (setup  
     ;; Set up the players, 4 players each on their own team
      (create players 2)
      (create teams (0) (1))

	  (create diestorage 'GAMEDICE (20) (20) )

      ;; Create the deck source
      (create deck (game iloc STOCK) (deck (RANK (A, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, J, Q, K))
                                             (COLOR (RED (SUIT (HEARTS, DIAMONDS)))
                                                   (BLACK (SUIT (CLUBS, SPADES))))))          
    )
    (do (
      (shuffle (game iloc STOCK))
	  (throwalldice 'GAMEDICE)
	  (throwalldice 'GAMEDICE)
      (all player 'P
         (do (
            (repeat 2
               (move (top (game iloc STOCK))
                     (top ('P iloc HAND))))
            (set ('P sto CHIPS) 99)
         ))
      )
      (put points 'POINTSLOW (
        ((RANK (A)) 1)
        ((RANK (K)) 10) 
        ((RANK (Q)) 10)
        ((RANK (J)) 10)
        ((RANK (TEN)) 10)
        ((RANK (NINE)) 9)
        ((RANK (EIGHT)) 8)
        ((RANK (SEVEN)) 7)
        ((RANK (SIX)) 6)
        ((RANK (FIVE)) 5)
        ((RANK (FOUR)) 4)
        ((RANK (THREE)) 3)
        ((RANK (TWO)) 2)
      ))    
      (put points 'POINTSHIGH (
        ((RANK (A)) 11)
        ((RANK (K)) 10) 
        ((RANK (Q)) 10)
        ((RANK (J)) 10)
        ((RANK (TEN)) 10)
        ((RANK (NINE)) 9)
        ((RANK (EIGHT)) 8)
        ((RANK (SEVEN)) 7)
        ((RANK (SIX)) 6)
        ((RANK (FIVE)) 5)
        ((RANK (FOUR)) 4)
        ((RANK (THREE)) 3)
        ((RANK (TWO)) 2)
        ))
     ))
               
     ;; bidding
     (stage player
         (end (all player 'P (> ('P sto BET) 0)))
      
       ;;TODO
         
         (choice (
                  (any (range 1..5) 'B
                       (set ((current player) sto BET) 'B))
         ))
         ;;(choice (
         ;;   (set ((current player) sto BET) (any (range (1) ((current player) sto CHIPS))))
         ;;))
     )
      
      ;; players get cards until FINISHED or BUSTED
      
      (stage player
         (end (all player 'P (== ('P sto FINISHED) 1)))
                    
         (choice (
   
                  
            ((or (< (sum ((current player) iloc HAND) using 'POINTSHIGH) (+ (dievalue 'GAMEDICE) 21))
                 (< (sum ((current player) iloc HAND) using 'POINTSLOW) (+ (dievalue 'GAMEDICE) 21)))
             (do (
                (move (top (game iloc STOCK)) 
                      (top ((current player) iloc HAND)))
               ;; (set ((current player) sto BET) (*(size((current player) iloc HAND)) 10))
                ((or (< (sum ((current player) iloc HAND) using 'POINTSHIGH) (+ (dievalue 'GAMEDICE) 21))
                 (< (sum ((current player) iloc HAND) using 'POINTSLOW) (+ (dievalue 'GAMEDICE) 21)))
                (cycle next current))
            )))
            
            ((or (< (sum ((current player) iloc HAND) using 'POINTSHIGH) (+ (dievalue 'GAMEDICE) 21))
                 (< (sum ((current player) iloc HAND) using 'POINTSLOW) (+ (dievalue 'GAMEDICE) 21)))
             (set ((current player) sto FINISHED) 1))
            
       
            
           
         ))
         (do (
          ((and (>= (sum ((current player) iloc HAND) using 'POINTSHIGH) (+ (dievalue 'GAMEDICE) 21))
                  (>= (sum ((current player) iloc HAND) using 'POINTSLOW) (+ (dievalue 'GAMEDICE) 21)))
             (do (
                 (repeat all
                    (move (top ((current player) iloc HAND)) 
                          (top (game vloc DISCARD))))
                 (dec ((current player) sto CHIPS) ((current player) sto BET))
                 (set ((current player) sto BET) 0)
                 (set ((current player) sto FINISHED) 1)
                 
           )))
          ))
         )
       
      
       (do (
            (all player 'P
                 (do (
                      ((< (sum ('P iloc HAND) using 'POINTSHIGH)
                          (+ (dievalue 'GAMEDICE) 21))
                       (set ('P sto SCOREHAND) (sum ('P iloc HAND) using 'POINTSHIGH))
                       )
           
                      ((>= (sum ('P iloc HAND) using 'POINTSHIGH)
                           (+ (dievalue 'GAMEDICE) 21))
                       (set ('P sto SCOREHAND) (sum ('P iloc HAND) using 'POINTSLOW)))
       
                      ))
                 )
            ))

      
      (stage player
      (end (all player 'P (== ('P sto BET) 0)))
      ;; get correct scoring hand
     
      (do (
           ((> ((current player) sto SCOREHAND)
               ((next player) sto SCOREHAND))
             (inc ((current player) sto CHIPS) ((current player) sto BET))
             )
           ((<= ((current player) sto SCOREHAND)
               ((next player) sto SCOREHAND))
             (dec ((current player) sto CHIPS) ((current player) sto BET))
            )
           (repeat all 
           (move (top ((current player) iloc HAND)) 
               (top (game vloc DISCARD))))
           (set ((current player) sto BET) 0)
          ))
      )
      (scoring max ((current player) sto CHIPS))
)
           
        